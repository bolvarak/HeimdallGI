{
    "Interpreter": {

        "BareWords": {

            "do": {

            },

            "else": {

            },

            "elif": {

            },

            "for": {

            },

            "foreach": {

            },

            "forever": {

            },

            "loop": {

            },

            "until": {

            },

            "while": {

            }
        },

        "Classes": {

            "File": {

                "Class": "HeimdallGI::Interpretation::File",

                "Description": "This class handles file interactions",

                "Expression": "\\s*?(new\\s+?File|File\\-\\>new\\s*?\\(*?\\)*?)\\s*?;",

                "Methods": {

                    "Open": {

                        "Access":      "public",

                        "Arguments":   [{"Type": "string", "Required": true, "Name": "$fileName"}, {"Type": "string", "Required": false, "Name": "$openType", "Default": "RO"}],

                        "Description": "Opens a file for reading or writing",

                        "Expression":  "__::Pointers::Object\\s*?Open\\s*?\\(\\s*?__::Types::String\\s*?,\\s*?__::Types::String\\s*?\\)\\s*?;",

                        "Returns":     ["object"]

                    }

                },

                "Properties": {



                }
            }

        },

        "Constants": {

            "BINARY_PATH": {
                "Class" : "HeimdallGI::Interpretation::Constants",
                "Method": "BinaryPath"
            },

            "DIRECTORY_SEPARATOR": {
                "Class" : "HeimdallGI::Interpretation::Constants",
                "Method": "DirectorySeparator"
            },

            "PATH_SEPARATOR": {
                "Class" : "HeimdallGI::Interpretation::Constants",
                "Method": "PathSeparator"
            },

            "PWD": {
                "Class" : "HeimdallGI::Interpretation::Constants",
                "Method": "CurrentWorkingDirectory"
            },

            "STATIC_PATH": {
                "Class" : "HeimdallGI::Interpretation::Constants",
                "Method": "StaticPath"
            },

            "VIEW_PATH": {
                "Class" : "HeimdallGI::Interpretation::Constants",
                "Method": "ViewPath"
            },
        },

        "Functions": {

            "cast": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}, {"Type": "string", "Required": true, "Name": "$type"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?cast\\s*?\\(\\s*?(\"|'{1}?\\${1}?[a-zA-Z0-9_-]+\"|'{1}?)\\s*?,\\s*?(.*?)\\s*?\\)\\s*?;",
                "Method":     "Cast",
                "Returns":    ["mixed"]
            },

            "constant": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$constantName"}, {"Type": "mixed", "Required": true, "Name": "$value"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?constant\\s*?\\(\\s*?(\"|'{1}?\\${1}?[a-zA-Z0-9_-]+\"|'{1}?)\\s*?,\\s*?(.*?)\\s*?\\)\\s*?;",
                "Method":     "Constant",
                "Returns":    ["boolean"]
            },

            "deleteCookie": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$cookieName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?deleteCookie\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "DeleteCookie",
                "Returns":    ["mixed"]
            },

            "dump": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?dump\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "Dump",
                "Returns":    ["mixed", "null", "number", "string"]
            },

            "echo": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?echo\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "Echo",
                "Returns":    ["mixed", "null", "number", "string"]
            },

            "fromHtmlEntities": {
                "Arguments":  [{"Type": "string","Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?fromHtmlEntities\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "FromHTMLEntities",
                "Returns":    ["string"]
            },

            "fromJson": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?fromJson\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "FromJSON",
                "Returns":    ["object"]
            },

            "fromUrlEncoded": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?fromUrlEncoded\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "FromURLEncoded",
                "Returns":    ["object"]
            },

            "fromXml": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?fromXml\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "FromXML",
                "Returns":    ["object"]
            },

            "get": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?get\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "GetVariable",
                "Returns":    ["mixed"]
            },

            "getConfigurationValue": {
                "Arguments": [{"Type": "string", "Required": true}, {"Type": "mixed", "Required": false, "Default": null}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Method":    "GetConfigurationValue",
                "Returns":   ["boolean", "number", "string"]
            },

            "getCookie": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$cookieName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?getCookie\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "GetCookie",
                "Returns":    ["mixed"]
            },

            "isDefined": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?isDefined\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "IsDefined",
                "Returns":    ["boolean"]
            },

            "print": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?print\\s*?\\(\\s*?\\$([a-zA-Z0-9_-]+)\\s*?\\)\\s*?;",
                "Method":     "Echo",
                "Returns":    ["mixed", "null", "number", "string"]
            },

            "set": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}, {"Type": "mixed", "Required": true, "Name": "$value"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?set\\s*?\\(\\s*?(\"|'{1}?\\${1}?[a-zA-Z0-9_-]+\"|'{1}?)\\s*?,\\s*?(.*?)\\s*?\\)\\s*?;",
                "Method":     "SetVariable",
                "Returns":    ["boolean"]
            },

            "setConfgigurationValue": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}, {"Type": "mixed", "Required": true, "Name": "$value"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?setConfigurationValue\\s*?\\(\\s*?(\"|'{1}?\\${1}?[a-zA-Z0-9_-]+\"|'{1}?)\\s*?,\\s*?(.*?)\\s*?\\)\\s*?;",
                "Method":     "SetConfigurationValue",
                "Returns":    ["boolean"]
            },

            "setCookie": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$cookieName"}, {"Type": "mixed", "Required": true, "Name": "$value"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?setCookie\\s*?\\(\\s*?(\"|'{1}?\\${1}?[a-zA-Z0-9_-]+\"|'{1}?)\\s*?,\\s*?(.*?)\\s*?\\)\\s*?;",
                "Method":     "SetVariable",
                "Returns":    ["boolean"]
            },

            "toHtmlEntities": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?toHtmlEntities\\s*?\\(\\s*?(\"|'.*?\"|')\\s*?\\)\\s*?;",
                "Method":     "ToHTMLEntities",
                "Returns":    ["string"]
            },

            "toJson": {
                "Arguments": [{"Type": "mixed", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?toJson\\s*?\\(\\s*?(\"|'.*?\"|')\\s*?\\)\\s*?;",
                "Method":    "ToJSON",
                "Returns":   ["string"]
            },

            "toUrlEncoded": {
                "Arguments":  [{"Type": "string", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?toUrlEncoded\\s*?\\(\\s*?(\"|'.*?\"|')\\s*?\\)\\s*?;",
                "Method":     "ToURLEncoded",
                "Returns":    ["string"]
            },

            "toXml": {
                "Arguments":  [{"Type": "mixed", "Required": true, "Name": "$varName"}],
                "Class":      "HeimdallGI::Interpretation::Functions",
                "Expression": "\\s*?toXml\\s*?\\(\\s*?(\"|'.*?\"|')\\s*?\\)\\s*?;",
                "Method":     "ToXML",
                "Returns":    ["string"]
            }
        },

        "Globals": {

            "$_COOKIES": {

            },

            "$_DEBUG": {

            },

            "$_GET": {

            },

            "$_LOG": {

            },

            "$_POST": {

            },

            "$_QUERY": {

            },

            "$_REQUEST": {

            },

            "$_SERVER": {

            },

            "$_VIEW": {

            }
        },

        "Operators": {

            "=" : {

            },

            "and": {

            },

            "div": {

            },

            "eq": {

            },

            "gt": {

            },

            "gte": {

            },

            "lt": {

            },

            "lte": {

            },

            "mod": {

            },

            "neq": {

            },

            "not": {

            },

            "or": {

            }
        },

        "Pointers": {

            "hash":         "(\\{\"|'{1}?[a-zA-Z0-9_-]+\"|'{1}?\\})",

            "object":       "\\s*?(\\-\\>|\\.)\\s*?",

            "staticObject": "(\\:\\:)",

            "variable":     "(\\$)"
        },

        "Types": {

            "array":   "(new\\s+?array\\s*?\\(\\s*?(.*?,{1}?\\s*?)+?\\s*?\\)\\s*?|\\s+?array\\s*?\\(\\s*?(.*?,{1}?\\s*?)+?\\s*?\\)\\s*?|\\s*?\\[\\s*?(.*?,{1}\\s*?)+?\\s*?\\]\\s*?)",

            "boolean": "(true|false)",

            "number":  "(\\s*?(-*?[0-9]+)\\s*?|\\s*?(-*?[0-9]+\\.[0-9]+)\\s*?)",

            "null":    "(null)",

            "string":  "(new\\s+?string\\s*?\\(\\s*?'|\"(.*?)'|\"\\s*?\\)\\s*?|\\s*?'(.*?)'\\s*?|\\s*?\"(.*?)\"\\s*?)",


        }
    }
}
