///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Definitions //////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef TESTCONTROLLER_H
#define TESTCONTROLLER_H

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Headers //////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "QDebug"
#include "QList"
#include "QMetaObject"
#include "QMetaProperty"
#include "QObject"
#include "QtSql/QSqlRecord"
#include "QVariantMap"
#include "CGI.h"
#include "DBI.h"
#include "Log.h"
#include "View.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// TestController Class Definition //////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class TestController : public QObject
{
	/**
	 * Ensure this class is recognized by Qt
	 */
	Q_OBJECT

///////////////////////////////////////////////////////////////////////////////
/// Protected Methods & Properties ///////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

protected:

	/**
	 * @paragraph This property contains the instance of the system logger
	 * @brief TestController::mLogger
	 * @var HeimdallGI::Log*
	 */
	HeimdallGI::Log* mLogger;

	/**
	 * @paragraph This property contains a list of records
	 * @brief TestController::mRecords
	 * @var QList<QVariantMap>
	 */
	QList<QVariantMap> mRecords;

///////////////////////////////////////////////////////////////////////////////
/// Public Properties & Methods //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

public:

	///////////////////////////////////////////////////////////////////////////
	/// Constructor //////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////

	TestController(QObject* qoParent = 0);

	///////////////////////////////////////////////////////////////////////
	/// Setters //////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////

	/**
	 * @paragraph This method sets the logger into the instance
	 * @brief TestController::SetLogger()
	 * @param HeimdallGI::Log* objLogger
	 * @return TestController* this
	 */
	TestController* SetLogger(HeimdallGI::Log* &objLogger);

///////////////////////////////////////////////////////////////////////////////
/// Public Slots (View Methods) //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

public slots:

	/**
	 * @paragraph This method runs the view for the index of the application
	 * @brief TestController::Index()
	 * @param HeimdallGI::CGI* objRequest
	 * @param HeimdallGI::View* &objView
	 * @return void
	 */
	void Index(HeimdallGI::CGI* &objRequest, HeimdallGI::View* &objView);

	/**
	 * @paragraph This slot connects to HeimdallGI::DBI::Row
	 * @brief TestController::RowFetched()
	 * @param QSqlRecord qsrRow
	 * @return void
	 */
	void RowFetched(QSqlRecord qsrRow);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// End TestController Class Definition //////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

};

#endif // TESTCONTROLLER_H
