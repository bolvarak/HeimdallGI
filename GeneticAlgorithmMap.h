///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Definitions //////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Class header
#ifndef HEIMDALLGI_GENETICALGORITHMMAP_H
#define HEIMDALLGI_GENETICALGORITHMMAP_H

// Map dimensions
#ifndef HEIMDALLGI_GENETICALGORITHMMAP_HEIGHT
	#define HEIMDALLGI_GENETICALGORITHMMAP_HEIGHT 10
#endif

#ifndef HEIMDALLGI_GENETICALGORITHMMAP_WIDTH
	#define HEIMDALLGI_GENETICALGORITHMMAP_WIDTH 15
#endif

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Headers //////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "QObject"
#include "QVector"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Namespace ////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace HeimdallGI {

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// HeimdallGI::GeneticAlgorithmMap Class Definition /////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	class GeneticAlgorithmMap : public QObject
	{
		/**
		 * Ensure this class is recognized by Qt
		 */
		Q_OBJECT

	///////////////////////////////////////////////////////////////////////////
	/// Protected Methods & Properties ///////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////

	protected:

		///////////////////////////////////////////////////////////////////////
		/// Properties ///////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		/**
		 * @paragraph This property contains the singleton instance of this class
		 * @brief HeimdallGI::GeneticAlgorithmMap::mInstance
		 * @var HeimdallGI::GeneticAlgorithmMap*
		 */
		static GeneticAlgorithmMap* mInstance;

		/**
		 * @paragraph This property contains the map's end point for the X-Axis
		 * @brief HeimdallGI::GeneticAlgorithmMap::mEndX
		 * @var int
		 */
		static const int mEndX;

		/**
		 * @paragraph This property contains the map's end point for the Y-Axis
		 * @brief HeimdallGI::GeneticAlgorithmMap::mEndY
		 * @var int
		 */
		static const int mEndY;

		/**
		 * @paragraph This property contains the map
		 * @brief HeidmallGI::GeneticAlgorithmMap::mMap
		 * @var int
		 */
		static const int mMap[HEIMDALLGI_GENETICALGORITHMMAP_HEIGHT][HEIMDALLGI_GENETICALGORITHMMAP_WIDTH];

		/**
		 * @paragraph This property contains the map's height
		 * @brief HeimdallGI::GeneticAlgorithmMap::mMapHeight
		 * @var int
		 */
		static const int mMapHeight;

		/**
		 * @paragraph This property contains the map's width
		 * @brief HeimdallGI::GeneticAlgorithmMap::mMapWidth
		 * @var int
		 */
		static const int mMapWidth;

		/**
		 * @paragraph This property contains the map's starting point for the X-Axis
		 * @brief HeimdallGI::GeneticAlgorithmMap::mStartX
		 * @var int
		 */
		static const int mStartX;

		/**
		 * @paragraph This property contains the map's starting point for the Y-Axis
		 * @brief mStartY
		 */
		static const int mStartY;

	///////////////////////////////////////////////////////////////////////////
	/// Public Methods & Properties //////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////

	public:

		///////////////////////////////////////////////////////////////////////
		/// Properties ///////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		/**
		 * @paragraph This property contains the map's memory
		 * @brief HeimdallGI::GeneticAlgorithmMap::mMemory
		 * @var int
		 */
		int mMemory[HEIMDALLGI_GENETICALGORITHMMAP_HEIGHT][HEIMDALLGI_GENETICALGORITHMMAP_WIDTH];

		///////////////////////////////////////////////////////////////////////
		/// Singleton ////////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		/**
		 * @paragraph This method maintains access to the singleton instance of this class
		 * @brief HeimdallGI::GeneticAlgorithmMap::Instance()
		 * @param bool bReset [false]
		 * @return HeimdallGI::GeneticAlgorithmMap* HeimdallGI::GeneticAlgorithmMap::mInstance
		 */
		static GeneticAlgorithmMap* Instance(bool bReset = false);

		///////////////////////////////////////////////////////////////////////
		/// Constructor //////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		explicit GeneticAlgorithmMap(QObject* qoParent = 0);

		///////////////////////////////////////////////////////////////////////
		/// Methods //////////////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		/**
		 * @paragraph This method displays the map
		 * @brief HeimdallGI::GeneticAlgorithmMap::Render()
		 * @param int intGeneration
		 * @return void
		 */
		void Render(int &intGeneration);

		/**
		 * @paragraph This method displays just the generation counter
		 * @brief HeimdallGI::GeneticAlgorithmMap::RenderGeneration()
		 * @param int intGeneration
		 * @return void
		 */
		void RenderGeneration(int &intGeneration);

		/**
		 * @paragraph This method clears the map's memory
		 * @brief HeimdallGI::GeneticAlgorithmMap::ResetMemory()
		 * @return void
		 */
		void ResetMemory();

		/**
		 * @paragraph This method tests the route to see how far an organism can get and returns a fitness score proportional to the distance from the exit
		 * @brief HeimdallGI::GeneticAlgorithmMap::TestRoute()
		 * @param QVector<int> qviPath
		 * @param GeneticAlgorithmMap gamMemory
		 * @return double
		 */
		double TestRoute(QVector<int> &qviPath, GeneticAlgorithmMap &gamMemory);

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// End HeimdallGI::GeneticAlgorithmMap Class Definition /////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// End Namespace ////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// End Definitions //////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif
