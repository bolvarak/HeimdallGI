///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Definitions //////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef HEIMDALLGI_ION_H
#define HEIMDALLGI_ION_H

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Headers //////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "QDateTime"
#include "QDir"
#include "QFile"
#include "QList"
#include "QMap"
#include "QObject"
#include "QString"
#include "QStringList"
#include "QVariant"
#include "QVariantMap"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Namespace ////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace HeimdallGI {

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// Structures ///////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////


	struct IonColumn {

		///////////////////////////////////////////////////////////////
		/// Properties ///////////////////////////////////////////////
		/////////////////////////////////////////////////////////////

		/**
		 * @paragraph This property contains the database name for the column
		 * @brief HeimdallGI::IonColumn::mDatabase
		 * @var QString
		 */
		QString mDatabase;

		/**
		 * @paragraph This property contains the default value for the column
		 * @brief HeimdallGI::IonColumn::mDefault
		 * @var QVariant
		 */
		QVariant mDefault;

		/**
		 * @pragraph This property contains the name of the column
		 * @brief HeimdallGI::IonColumn::mName
		 * @var QString
		 */
		QString mName;

		/**
		 * @paragraph This property contains the position of the the column in the record/row
		 * @brief HeimdallGI::IonColumn::mPosition
		 * @var int
		 */
		int mPosition;

		/**
		 * @paragraph This property contains the name of the table that the column belongs to
		 * @brief HeimdallGI::IonColumn::mTable
		 * @var QString
		 */
		QString mTable;

		/**
		 * @paragraph This property contains the column type
		 * @brief HeimdallGI::IonColumn::mType
		 * @var QString
		 */
		QString mType;

		/**
		 * @paragraph This property contains the value for the column for use in a recordset
		 * @brief HeimdallGI::IonColumn::mValue
		 * @var QVariant
		 */
		QVariant mValue;

		///////////////////////////////////////////////////////////////
		/// Constructors /////////////////////////////////////////////
		/////////////////////////////////////////////////////////////

		/**
		 * @paragraph This constructor simply initializes the HeimdallGI::IonColumn structure
		 * @brief HeimdallGI::IonColumn::IonColumn()
		 */
		IonColumn() {}

		/**
		 * @paragraph This constructor initializes and sets up the HeimdallGI::IonColumn structure
		 * @brief HeimdallGI::IonColumn::IonColumn
		 * @param QString strName
		 * @param QString strType
		 * @param int intPosition
		 * @param QString strTable
		 * @param QString strDatabase [NULL]
		 * @param QVariant qvDefault [NULL]
		 * @param QVariant qvValue [NULL]
		 */
		IonColumn(QString strName, QString strType, int intPosition, QString strTable, QString strDatabase = NULL, QVariant qvDefault = NULL, QVariant qvValue = NULL) {
			// Set the column name
			mName     = strName;
			// Set the column type
			mType     = strType;
			// Set the column position
			mPosition = intPosition;
			// Set the column table
			mTable    = strTable;
			// Set the column database
			mDatabase = strDatabase;
			// Set the column default value
			mDefault  = qvDefault;
			// Set the column value
			mValue    = qvValue;
		}
		
		///////////////////////////////////////////////////////////////
		/// Getters //////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////

		
		QString getDatabase() { return mDatabase; }
		
		
		QVariant getDefault () {return mDefault; }
		
		
		QString getName () { return mName; }
		
		
		int getPosition () { return mPosition; }
		
		
		QString getTable () { return mTable; }
		
		
		QString getType () { return mType; }
		
		
		QVariant getValue() { return mValue; }
		
		///////////////////////////////////////////////////////////////
		/// Setters //////////////////////////////////////////////////
		/////////////////////////////////////////////////////////////
		
	};


	struct IonIndex {

	};


	struct IonRecord {

		///////////////////////////////////////////////////////////////
		/// Properties ///////////////////////////////////////////////
		/////////////////////////////////////////////////////////////

		/**
		 * @paragraph This property contains the columns
		 * @brief HeimdallGI::IonRecord::mColumns
		 * @var QMap<QString, HeimdallGI::IonColumn>
		 */
		QMap<QString, IonColumn> mColumns;

		///////////////////////////////////////////////////////////////
		/// Constructors /////////////////////////////////////////////
		/////////////////////////////////////////////////////////////




	};


	struct IonTable {

	};

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// HeimdallGI::Ion Class Definition /////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////

	class Ion : public QObject
	{

		/**
		 * Ensure this class is recognized by Qt
		 */
		Q_OBJECT

	///////////////////////////////////////////////////////////////////////
	/// Public Methods & Properties //////////////////////////////////////
	/////////////////////////////////////////////////////////////////////

	public:

		///////////////////////////////////////////////////////////////
		/// Constructor //////////////////////////////////////////////
		/////////////////////////////////////////////////////////////

		explicit Ion(QObject* qoParent = 0);

	///////////////////////////////////////////////////////////////////////
	/// Signals //////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////

	signals:

	///////////////////////////////////////////////////////////////////////
	/// Public Slots /////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////

	public slots:

	};

} // namespace HeimdallGI

#endif // HEIMDALLGI_ION_H
