///////////////////////////////////////////////////////////////////////////////
/// Definitions //////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

#ifndef HEIMDALLGI_ISPCONFIG_H
#define HEIMDALLGI_ISPCONFIG_H

///////////////////////////////////////////////////////////////////////////////
/// Headers //////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

#include "QObject"
#include "QString"
#include "QStringList"
#include "QVariant"
#include "QVariantList"
#include "QVariantMap"


///////////////////////////////////////////////////////////////////////////////
/// HeimdallGI Namespace /////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

namespace HeimdallGI {

	///////////////////////////////////////////////////////////////////////////
	/// HeimdallGI::ISPConfig Class Definition ///////////////////////////////
	/////////////////////////////////////////////////////////////////////////

	class ISPConfig : public QObject
	{
			/**
			 * Ensure this class is recognized by Qt
			 */
			Q_OBJECT

		///////////////////////////////////////////////////////////////////////
		/// Protected Methods & Properties ///////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		protected:

			///////////////////////////////////////////////////////////////////
			/// Properties ///////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This property contains the singleton instance of this class
			 * @brief HeimdallGI::ISPConfig::mInstance
			 * @var HeimdallGI::ISPConfig*
			 */
			static ISPConfig* mInstance;

			/**
			 * @paragraph This property contains the connetion to the ISPConfig server
			 * @brief HeimdallGI::ISPConfig::mConnection
			 * @var QtSoapHttpTransport
			 */
			QtSoapHttpTransport mConnection;

			/**
			 * @paragraph This property contains the current session ID
			 * @brief HeimdallGI::ISPConfig::mSessionID
			 * @var QString
			 */
			QString mSessionID;

			///////////////////////////////////////////////////////////////////
			/// Methods //////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method compiles and sends a request to the ISPConfig server
			 * @brief HeimdallGI::ISPConfig::makeRequest()
			 * @param QString strMethod
			 * @param QVariantMap qvmArguments
			 * @return void
			 */
			void makeRequest(QString strMethod, QVariantMap qvmArguments);

			/**
			 * @paragraph This method compiles and sends a request to the ISPConfig server with a pre-compiled method
			 * @brief HeimdallGI::ISPConfig::makeRequest()
			 * @param QtSoapQName qsnMethod
			 * @param QVariantMap qvmArguments
			 * @return void
			 */
			void makeRequest(QtSoapQName qsnMethod, QVariantMap qvmArguments);

			/**
			 * @paragraph This method sends a pre-compile request to the ISPConfig server
			 * @brief HeimdallGI::ISPConfig::makeRequest()
			 * @param QtSoapMessage qsmRequest
			 * @return void
			 */
			void makeRequest(QtSoapMessage qsmRequest);

		///////////////////////////////////////////////////////////////////////
		/// Public Methods & Properties //////////////////////////////////////
		/////////////////////////////////////////////////////////////////////

		public:

			///////////////////////////////////////////////////////////////////
			/// Singleton ////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method maintains access to the singleton instance of this class
			 * @brief HeimdallGI::ISPConfig::Instance()
			 * @param bool blnReset [false]
			 * @return HeimdallGI::ISPConfig* HeimdallGI::ISPConfig::mInstance
			 */
			static ISPConfig* Instance(bool blnReset = false);

			///////////////////////////////////////////////////////////////////
			/// Constructor //////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			explicit ISPConfig(QObject *qoParent = 0);

			///////////////////////////////////////////////////////////////////
			/// Destructor ///////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			~ISPConfig();

			///////////////////////////////////////////////////////////////////
			/// Methods //////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////

			/**
			 * @paragraph This method kills the remote session with the ISPConfig server
			 * @brief HeimdallGI::ISPConfig::endSession()
			 * @return bool
			 */
			bool endSession();

			/**
			 * @paragraph This method initializes a remote session with the ISPConfig server
			 * @brief HeimdallGI::ISPConfig::startSession()
			 * @param QString strUsername
			 * @param QString strPassword
			 * @return bool
			 */
			bool startSession(QString strUsername, QString strPassword);

	///////////////////////////////////////////////////////////////////////////
	/// End HeimdallGI::ISPConfig Class Definition ///////////////////////////
	/////////////////////////////////////////////////////////////////////////

	};

///////////////////////////////////////////////////////////////////////////////
/// End HeimdallGI Namespace /////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

}

///////////////////////////////////////////////////////////////////////////////
/// End Definitions //////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

#endif
